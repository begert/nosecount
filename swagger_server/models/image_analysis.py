# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class ImageAnalysis(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, person_count: int=None, accuracy: float=None):  # noqa: E501
        """ImageAnalysis - a model defined in Swagger

        :param person_count: The person_count of this ImageAnalysis.  # noqa: E501
        :type person_count: int
        :param accuracy: The accuracy of this ImageAnalysis.  # noqa: E501
        :type accuracy: float
        """
        self.swagger_types = {
            'person_count': int,
            'accuracy': float
        }

        self.attribute_map = {
            'person_count': 'personCount',
            'accuracy': 'accuracy'
        }

        self._person_count = person_count
        self._accuracy = accuracy

    @classmethod
    def from_dict(cls, dikt) -> 'ImageAnalysis':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ImageAnalysis of this ImageAnalysis.  # noqa: E501
        :rtype: ImageAnalysis
        """
        return util.deserialize_model(dikt, cls)

    @property
    def person_count(self) -> int:
        """Gets the person_count of this ImageAnalysis.


        :return: The person_count of this ImageAnalysis.
        :rtype: int
        """
        return self._person_count

    @person_count.setter
    def person_count(self, person_count: int):
        """Sets the person_count of this ImageAnalysis.


        :param person_count: The person_count of this ImageAnalysis.
        :type person_count: int
        """

        self._person_count = person_count

    @property
    def accuracy(self) -> float:
        """Gets the accuracy of this ImageAnalysis.


        :return: The accuracy of this ImageAnalysis.
        :rtype: float
        """
        return self._accuracy

    @accuracy.setter
    def accuracy(self, accuracy: float):
        """Sets the accuracy of this ImageAnalysis.


        :param accuracy: The accuracy of this ImageAnalysis.
        :type accuracy: float
        """

        self._accuracy = accuracy
